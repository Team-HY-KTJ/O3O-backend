name: CI/CD Pipeline (Backend)

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
    types:
      - closed

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Log in to DigitalOcean Container Registry
        run: |
          echo "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" | \
            docker login -u "doctl" --password-stdin ${{ secrets.REGISTRY_URL }}

      - name: Set Environment Variables (TAG, REGISTRY_URL)
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "TAG=latest" >> $GITHUB_ENV
          else
            echo "TAG=dev" >> $GITHUB_ENV
          fi
          echo "REGISTRY_URL=${{ secrets.REGISTRY_URL }}" >> $GITHUB_ENV

      - name: Build Docker image with environment variables
        run: |
          docker build \
            -f backend/Dockerfile \
            --build-arg NODE_ENV=production \
            --build-arg DB_HOST=${{ secrets.DB_HOST }} \
            --build-arg DB_PORT=${{ secrets.DB_PORT }} \
            --build-arg DB_USER=${{ secrets.DB_USER }} \
            --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --build-arg DB_DATABASE=${{ secrets.DB_DATABASE }} \
            -t ${{ env.REGISTRY_URL }}/o3o-backend:${{ env.TAG }} \
            ./backend

      - name: Push Docker image
        run: |
          docker push ${{ env.REGISTRY_URL }}/o3o-backend:${{ env.TAG }}

      - name: Logout from Registry
        run: docker logout ${{ secrets.REGISTRY_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SSH key
        run: |
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > deploy_key.pem
            chmod 600 deploy_key.pem

      - name: Deploy to server
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no root@${{ secrets.SERVER_IP }} << EOF
            # 프로젝트 디렉토리 생성 및 이동
            mkdir -p /path/to/O3O-BACKEND
            cd /path/to/O3O-BACKEND || git clone https://github.com/your-repo/O3O-BACKEND.git /path/to/O3O-BACKEND
            cd /path/to/O3O-BACKEND
      
            # 최신 코드 가져오기
            git pull origin main || true
      
            echo "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" | \
              docker login -u "doctl" --password-stdin ${{ secrets.REGISTRY_URL }}
      
            export TAG=${{ env.TAG }}
            export REGISTRY_URL=${{ env.REGISTRY_URL }}
      
            # 환경 변수 파일 생성
            cat <<EOT > .env
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_DATABASE=${{ secrets.DB_DATABASE }}
            DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}
            PORT=${{ secrets.PORT }}
            EOT
      
            # 기존 컨테이너 중지 및 삭제 후 재시작
            docker-compose down || true
            docker-compose up -d --remove-orphans
      
            docker logout ${{ secrets.REGISTRY_URL }} || true
            exit
          EOF
      
        

      - name: Cleanup SSH key
        run: rm -f deploy_key.pem
